[tool.poetry]
name = "iscc-core"
version = "0.2.9"
build = "build.py"
description = "ISCC - Core Algorithms"
authors = ["Titusz <tp@py7.de>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://iscc.codes"
repository = "https://github.com/iscc/iscc-core"
documentation = "https://core.iscc.codes/"
keywords=["iscc", "identifier", "media", "content", "hash", "blockchain", "similarity"]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
]

[tool.poetry.urls]
"Changelog" = "https://core.iscc.codes/changelog"
"Coverage" = "https://app.codecov.io/gh/iscc/iscc-core"
"Bug Tracker" = "https://github.com/iscc/iscc-core/issues"
"Twitter" = "https://twitter.com/iscc_foundation"
"Donate" = "https://iscc.foundation/support"


[tool.poetry.dependencies]
python = ">=3.7,<4.0"
cython = { version = "*", optional = true }
blake3 = "*"
xxhash = "*"
more-itertools = "*"
bitarray-hardbyte = "*"
pybase64 = "*"
pydantic = {extras = ["dotenv"], version = "*"}
uvarint = "^1.2"
loguru = "^0.6"
base58 = "^2.1"
bases = "^0.2"
data-url = "^1.0"
jcs = "^0.2"

[tool.poetry.extras]
turbo = ["cython"]

[tool.poetry.dev-dependencies]
pytest = "*"
black = { version = "*", allow-prereleases = true }
mkdocs-material = "*"
mkdocstrings = {extras = ["python-legacy"], version = "^0.19.0"}
toml = "*"
PyYAML = "*"
coverage = "*"
pytest-cov = "*"
poethepoet = "*"
iscc-schema = "^0.3"
bandit = "^1.7.2"

[tool.black]
skip-string-normalization = false
line-length = 100
target-version = ['py37']

[tool.poe.tasks]
gentests = { cmd = "poetry run python -m tests.build_test_data", help = "Generate conformance test data" }
format = { cmd = "poetry run black .", help = "Code style formating with black" }
docs = { script = "tests.build_docs:main", help = "Copy README.md to /docs" }
lf = { cmd = "poetry run python -m tools.lf", help = "Convert line endings to lf" }
test = { cmd = "poetry run pytest --cov=iscc_core --cov-fail-under=100", help = "Run tests with coverage" }
sec = { cmd = "poetry run bandit -r iscc_core -q", help = "Security check with bandit" }
all = ["gentests", "format", "docs", "lf", "test", "sec"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
